{"mappings":"ACKA,IAAI,EAAiB,EACjB,EAAmB,CAAA,EACnB,EAAQ,SAAS,cAAc,CAAC,SAChC,EAAO,SAAS,cAAc,CAAC,QAC/B,EAAW,SAAS,cAAc,CAAC,aACnC,EAAW,SAAS,cAAc,CAAC,aAEvC,MAAM,EAAe,AAAC,IACpB,IAAM,EAAS,IAAI,cAAc,MAAM,CAAC,GAClC,EAAU,EAAM,EAAO,MAAM,CAAG,GACtC,GAAI,AAAW,GAAX,EACF,MAAM,iBAER,IAAM,EAAQ,IAAI,WAChB,EAAO,MAAM,CACb,EACA,EAAO,MAAM,CAAG,GAIlB,OAFA,EAAM,GAAG,CAAC,GACV,CAAK,CAAC,EAAO,MAAM,CAAC,CAAG,EAChB,CACT,EAEM,EAAe,CAAC,EAAS,KAC7B,IAAM,EAAQ,IAAI,WAChB,EAAO,MAAM,CACb,EACA,GAEF,OAAO,IAAI,cAAc,MAAM,CAAC,EAClC,EAIM,CACJ,SAAU,CACR,QAAS,CAAA,OAAE,CAAM,CAAA,SAAE,CAAQ,CAAA,MAAE,CAAK,CAAE,CACrC,CACF,CAAG,MAAM,YAAY,oBAAoB,CAAC,MAAM,qBAAsB,CACrE,IAAK,CACH,MAAO,CAAC,EAAS,KACf,IAAM,EAAS,EAAa,EAAS,GACrC,QAAQ,GAAG,CAAC,CAAC,EAAE,EAAO,CAAC,CACzB,EACA,WAAY,CAAC,EAAS,KACpB,IAAM,EAAS,EAAa,EAAS,EACrC,CAAA,EAAS,SAAS,CAChB,0EACA,EACA,QAEJ,EACA,aAAc,CAAC,EAAS,EAAQ,KAE9B,IAAM,EACJ,0GAFa,EAAa,EAAS,GAEnC,uBAKA,EALA,aAQF,GAAI,EAAkB,CACpB,EAAiB,EACjB,IAAM,EACJ,AAEI,EAFJ,KAAK,GAAG,CACN,EAAS,YAAY,CAAG,EAAS,YAAY,CAAG,EAAS,SAAS,EAGtE,EAAS,kBAAkB,CAAC,YAAa,GACzC,EAAM,KAAK,CAAG,GACV,GAAc,CAAA,EAAS,SAAS,CAAG,EAAS,YAAY,AAAZ,CAClD,MACE,EAAS,SAAS,CAAG,CAEzB,CACF,CACF,GAEA,EAAK,gBAAgB,CAAC,SAEtB,SAA2B,CAAC,EAC1B,EAAE,cAAc,GAChB,EAAmB,CAAA,EAKZ,EAAS,EAJA,EAAM,KAAK,EAIc,EAH3C,GAMA,OAAO,gBAAgB,CAAC,QAAS,KAC/B,EAAmB,CAAA,EAJZ,EAAS,EAKA,EAAM,KAAK,EALc,EAM3C","sources":["<anon>","src/js/main.js"],"sourcesContent":["var $54b47fc030b7b21e$exports = {};\n/// TODO:\n/// - Save and reload equations\n/// - Make it look more like a fullscreen calculator/speedcrunch\n/// - Make upstream support exponential notation\nvar $54b47fc030b7b21e$var$previousAnswer = 0;\nvar $54b47fc030b7b21e$var$finalCalculation = false;\nvar $54b47fc030b7b21e$var$input = document.getElementById(\"input\");\nvar $54b47fc030b7b21e$var$form = document.getElementById(\"form\");\nvar $54b47fc030b7b21e$var$upperRow = document.getElementById(\"upper-row\");\nvar $54b47fc030b7b21e$var$lowerRow = document.getElementById(\"lower-row\");\nconst $54b47fc030b7b21e$var$encodeString = (string)=>{\n    const buffer = new TextEncoder().encode(string);\n    const pointer = $54b47fc030b7b21e$var$alloc(buffer.length + 1); // ask Zig to allocate memory\n    if (pointer == 0) throw allocationFailed;\n    const slice = new Uint8Array($54b47fc030b7b21e$var$memory.buffer, pointer, buffer.length + 1);\n    slice.set(buffer);\n    slice[buffer.length] = 0; // null byte to null-terminate the string\n    return pointer;\n};\nconst $54b47fc030b7b21e$var$decodeString = (pointer, length)=>{\n    const slice = new Uint8Array($54b47fc030b7b21e$var$memory.buffer, pointer, length);\n    return new TextDecoder().decode(slice);\n};\nvar $54b47fc030b7b21e$var$error = false;\nconst { instance: { exports: { memory: $54b47fc030b7b21e$var$memory, evaluate: $54b47fc030b7b21e$var$evaluate, alloc: $54b47fc030b7b21e$var$alloc } } } = await WebAssembly.instantiateStreaming(fetch(\"./Calculator.wasm\"), {\n    env: {\n        print: (pointer, length)=>{\n            const string = $54b47fc030b7b21e$var$decodeString(pointer, length);\n            console.log(`${string}`);\n        },\n        inputError: (pointer, length)=>{\n            const string = $54b47fc030b7b21e$var$decodeString(pointer, length);\n            $54b47fc030b7b21e$var$lowerRow.innerHTML = \"<div class='alert alert-danger mb-0' data-bs-theme='dark' role='alert'>\" + string + \"</div>\";\n            $54b47fc030b7b21e$var$error = true;\n        },\n        handleAnswer: (pointer, length, result)=>{\n            const string = $54b47fc030b7b21e$var$decodeString(pointer, length);\n            const text = \"<div class='alert alert-dark mb-0 text-end' data-bs-theme='dark' role='alert'><p class='fw-light mb-0'>\" + string + \"</p>\" + \"<p class='mb-0'>\" + result + \"</p>\" + \"</div>\";\n            if ($54b47fc030b7b21e$var$finalCalculation) {\n                $54b47fc030b7b21e$var$previousAnswer = result;\n                const updateHeight = Math.abs($54b47fc030b7b21e$var$upperRow.scrollHeight - $54b47fc030b7b21e$var$upperRow.clientHeight - $54b47fc030b7b21e$var$upperRow.scrollTop) < 2;\n                $54b47fc030b7b21e$var$upperRow.insertAdjacentHTML(\"beforeend\", text);\n                $54b47fc030b7b21e$var$input.value = \"\";\n                if (updateHeight) $54b47fc030b7b21e$var$upperRow.scrollTop = $54b47fc030b7b21e$var$upperRow.scrollHeight;\n            } else $54b47fc030b7b21e$var$lowerRow.innerHTML = text;\n        }\n    }\n});\n$54b47fc030b7b21e$var$form.addEventListener(\"submit\", $54b47fc030b7b21e$var$processSubmission);\nfunction $54b47fc030b7b21e$var$processSubmission(e) {\n    e.preventDefault();\n    $54b47fc030b7b21e$var$finalCalculation = true;\n    $54b47fc030b7b21e$var$calculateResult($54b47fc030b7b21e$var$input.value);\n}\nfunction $54b47fc030b7b21e$var$calculateResult(userInput) {\n    return $54b47fc030b7b21e$var$evaluate($54b47fc030b7b21e$var$encodeString(userInput), $54b47fc030b7b21e$var$previousAnswer);\n}\nwindow.addEventListener(\"keyup\", ()=>{\n    $54b47fc030b7b21e$var$finalCalculation = false;\n    $54b47fc030b7b21e$var$calculateResult($54b47fc030b7b21e$var$input.value);\n});\n\n\n//# sourceMappingURL=index.86fc8ff3.js.map\n","/// TODO:\n/// - Save and reload equations\n/// - Make it look more like a fullscreen calculator/speedcrunch\n/// - Make upstream support exponential notation\n\nvar previousAnswer = 0;\nvar finalCalculation = false;\nvar input = document.getElementById(\"input\");\nvar form = document.getElementById(\"form\");\nvar upperRow = document.getElementById(\"upper-row\");\nvar lowerRow = document.getElementById(\"lower-row\");\n\nconst encodeString = (string) => {\n  const buffer = new TextEncoder().encode(string);\n  const pointer = alloc(buffer.length + 1); // ask Zig to allocate memory\n  if (pointer == 0) {\n    throw allocationFailed;\n  }\n  const slice = new Uint8Array(\n    memory.buffer, // memory exported from Zig\n    pointer,\n    buffer.length + 1\n  );\n  slice.set(buffer);\n  slice[buffer.length] = 0; // null byte to null-terminate the string\n  return pointer;\n};\n\nconst decodeString = (pointer, length) => {\n  const slice = new Uint8Array(\n    memory.buffer, //\n    pointer,\n    length\n  );\n  return new TextDecoder().decode(slice);\n};\n\nvar error = false;\n\nconst {\n  instance: {\n    exports: { memory, evaluate, alloc },\n  },\n} = await WebAssembly.instantiateStreaming(fetch(\"./Calculator.wasm\"), {\n  env: {\n    print: (pointer, length) => {\n      const string = decodeString(pointer, length);\n      console.log(`${string}`);\n    },\n    inputError: (pointer, length) => {\n      const string = decodeString(pointer, length);\n      lowerRow.innerHTML =\n        \"<div class='alert alert-danger mb-0' data-bs-theme='dark' role='alert'>\" +\n        string +\n        \"</div>\";\n      error = true;\n    },\n    handleAnswer: (pointer, length, result) => {\n      const string = decodeString(pointer, length);\n      const text =\n        \"<div class='alert alert-dark mb-0 text-end' data-bs-theme='dark' role='alert'>\" +\n        \"<p class='fw-light mb-0'>\" +\n        string +\n        \"</p>\" +\n        \"<p class='mb-0'>\" +\n        result +\n        \"</p>\" +\n        \"</div>\";\n      if (finalCalculation) {\n        previousAnswer = result;\n        const updateHeight =\n          Math.abs(\n            upperRow.scrollHeight - upperRow.clientHeight - upperRow.scrollTop\n          ) < 2;\n\n        upperRow.insertAdjacentHTML(\"beforeend\", text);\n        input.value = \"\";\n        if (updateHeight) upperRow.scrollTop = upperRow.scrollHeight;\n      } else {\n        lowerRow.innerHTML = text;\n      }\n    },\n  },\n});\n\nform.addEventListener(\"submit\", processSubmission);\n\nfunction processSubmission(e) {\n  e.preventDefault();\n  finalCalculation = true;\n  calculateResult(input.value);\n}\n\nfunction calculateResult(userInput) {\n  return evaluate(encodeString(userInput), previousAnswer);\n}\n\nwindow.addEventListener(\"keyup\", () => {\n  finalCalculation = false;\n  calculateResult(input.value);\n});\n"],"names":["$54b47fc030b7b21e$var$previousAnswer","$54b47fc030b7b21e$var$finalCalculation","$54b47fc030b7b21e$var$input","document","getElementById","$54b47fc030b7b21e$var$form","$54b47fc030b7b21e$var$upperRow","$54b47fc030b7b21e$var$lowerRow","$54b47fc030b7b21e$var$encodeString","string","buffer","TextEncoder","encode","pointer","$54b47fc030b7b21e$var$alloc","length","allocationFailed","slice","Uint8Array","$54b47fc030b7b21e$var$memory","set","$54b47fc030b7b21e$var$decodeString","TextDecoder","decode","instance","exports","memory","evaluate","$54b47fc030b7b21e$var$evaluate","alloc","WebAssembly","instantiateStreaming","fetch","env","print","console","log","inputError","innerHTML","handleAnswer","result","text","updateHeight","Math","abs","scrollHeight","clientHeight","scrollTop","insertAdjacentHTML","value","addEventListener","e","preventDefault","window"],"version":3,"file":"index.86fc8ff3.js.map"}